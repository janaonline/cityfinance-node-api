require("./dbConnect");
const { modelSchema } = require('./constants')
const fiscalRankingMapperSchema = new Schema(
    {
        fiscal_ranking: { type: Schema.Types.ObjectId, ref: "FiscalRanking", required: true },
        ulb: { type: Schema.Types.ObjectId, ref: "Ulb", required: true },
        year: { type: Schema.Types.ObjectId, ref: "Year", required: true },
        value: { type: Schema.Types.Mixed, default: null },
        date: { type: Date, default: null }, // audit date
        status: {
            type: String,
            default: "PENDING",
            enum: {
                values: ["PENDING", "APPROVED", "REJECTED", "NA"],
                message: "ERROR: STATUS BE EITHER 'PENDING'/ 'APPROVED' / 'REJECTED'",
            },
        },
        isActive: { type: Boolean, default: 1 },
        modelName: modelSchema(),
        type: {
            type: String,
            enum: {
                values: [
                'auditedAnnualFySt',
                'auditAnnualReport',    
                'totalRecActual',
                'totalRcptWaterSupply',
                'sewerageTax',
                'totalRcptSanitation',
                'totalRecBudgetEst',
                'totalOwnRevenues',
                'propertyTax',
                'waterTax',
                'taxRevenue',
                'drainageTax',
                'profTax',
                'entertainTax',
                'advTax',
                'otherTaxRev',
                'feeUserChrg',
                'waterSupplyFee',
                'sanitationFee',
                'garbageFee',
                'otherFee',
                'rentInc',
                'assignedCompensation',
                'octroiCompensation',
                'otherCompensation',
                'revGrants',
                'centralGrant',
                'faLandBuild',
                'faOther',
                'debtOs',
                'assetsSale',
                'incmLandSale',
                'incmOtherAssets',
                'cfcGrant',
                'cssGrant',
                'centralscheme',
                'centralTransfer',
                'stateGrant',
                'sfcGrant',
                'stateScheme',
                'otherStateTrans',
                'otherGrant',
                'otherIncome',
                'totalIncome',
                'establishExpense',
                'categoryA',
                'categoryB',
                'categoryC',
                'otherEstExpense',
                'adminExpense',
                'totalCaptlExp',
                'fixedAsset',
                'CaptExpOther',
                'totalOmExp',
                'omExpOther',
                'grossBeforePrior',
                'totalOMCaptlExpWaterSupply',
                'totalOMCaptlExpSanitation',
                'finExpense',
                'misExpense',
                'otherExpense',
                'totalExpend',
                'grossAfterPrior',
                'priorItems',
                'reservFunds',
                'netBal',
                'OwnRvnue',
                'RvnueExp',
                'CaptlExp',
                'CaptlExpWaterSupply',
                'CaptlExpSanitation',
                'auditAnnualReport',
                'totalOwnRevenueArea',
                'webUrlAnnual',
                'registerGis',
                'registerGisProof',
                'accountStwre',
                'fy_21_22_online',
                'property_tax_register',
                'paying_property_tax',
                "RcptBudget",
                "totalCaptlExpWaterSupply",
                'paid_property_tax',
                'appAnnualBudget',
                'accountStwreProof'
            ],
                message: "ERROR: STATUS BE EITHER",
            },
        },
        file: {
            name: { type: String },
            url: { type: String }
        },
        typeofdata: {
            type: String,
            default: "number",
            enum: {
                values: ["number", "file", "date","radio-toggle","text","url"],
                message: "ERROR: STATUS BE EITHER",
            },
        },
        createdAt: { type: Date, default: Date.now() },
        modifiedAt: { type: Date, default: Date.now() },
    },
    { timestamp: { createdAt: "createdAt", updatedAt: "modifiedAt" } }
);
module.exports = mongoose.model("FiscalRankingMapper", fiscalRankingMapperSchema);
