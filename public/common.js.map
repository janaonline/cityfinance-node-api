{"version":3,"sources":["webpack:///./src/app/dashboard/data-entry/data-entry.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA2C;AACqB;AACD;AAK/D;IAEE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,oCAAS,GAAT,UAAU,KAAK;QACb,IAAM,WAAW,GAAG,EAAE,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,QAAQ,EAAE,qBAAqB,EAAC,CAAC,EAAE,CAAC;QACpF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,GAAG,CAAC,GAAG,GAAG,kBAAkB,EAAE,KAAK,EAAE,WAAW,CAAE,CAAC;IAEvF,CAAC;IAED,sCAAW,GAAX,UAAY,UAAU;QACpB,IAAM,WAAW,GAAG,EAAE,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,QAAQ,EAAE,qBAAqB,EAAC,CAAC,EAAE,CAAC;QACpF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,GAAG,CAAC,GAAG,GAAG,cAAc,EAAE,UAAU,EAAE,WAAW,CAAE,CAAC;IACxF,CAAC;IAED,wCAAa,GAAb,UAAc,QAAQ;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,GAAG,CAAC,GAAG,GAAG,eAAe,EAAE,QAAQ,CAAE,CAAC;IAC1E,CAAC;IAGD,+CAAoB,GAApB,UAAqB,KAAK;QACxB,IAAM,WAAW,GAAG,EAAE,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAC,QAAQ,EAAE,qBAAqB,EAAC,CAAC,EAAE,CAAC;QACpF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qEAAW,CAAC,GAAG,CAAC,GAAG,GAAG,6BAA6B,EAAE,KAAK,EAAE,WAAW,CAAE,CAAC;IAClG,CAAC;IAvBU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG0B,+DAAU;OAFzB,gBAAgB,CAyB5B;IAAD,uBAAC;CAAA;AAzB4B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataEntryService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  bulkEntry(files){\r\n    const httpOptions = { headers: new HttpHeaders({'Accept': 'multipart/form-data'}) };\r\n    return this.http.post(environment.api.url + 'ledger/bulkEntry', files, httpOptions );\r\n\r\n  }\r\n\r\n  createEntry(ledgerForm){\r\n    const httpOptions = { headers: new HttpHeaders({'Accept': 'multipart/form-data'}) };\r\n    return this.http.post(environment.api.url + 'ledger/entry', ledgerForm, httpOptions );\r\n  }\r\n\r\n  getLedgerLogs(criteria){\r\n    return this.http.post(environment.api.url + 'ledger/getAll', criteria );\r\n  }\r\n\r\n\r\n  excelToJsonConvertor(files){\r\n    const httpOptions = { headers: new HttpHeaders({'Accept': 'multipart/form-data'}) };\r\n    return this.http.post(environment.api.url + 'ledger/excelToJsonConvertor', files, httpOptions );\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}